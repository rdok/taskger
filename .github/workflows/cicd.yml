name: CI/CD
env:
  ORG: rdok
  NAME: taskger
  HEROKU_AUTH_TOKEN: ${{ secrets.HEROKU_API_KEY }}
on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        required: false
        description: "Allowed values: prod, test"
        default: prod
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Prepare environment variables
        id: env
        run: |
          ENVIRONMENT=${{ github.event.inputs.environment }}
          [ "$ENVIRONMENT" = "" ] && ENVIRONMENT=test

          if [ "$ENVIRONMENT" == "test" ]; then
            echo ::set-output name=db-host::"${{ secrets.DB_HOST_TEST }}"
            echo ::set-output name=db-name::"${{ secrets.DB_NAME_TEST }}"
            echo ::set-output name=db-user::"${{ secrets.DB_USER_TEST }}"
            echo ::set-output name=db-password::"${{ secrets.DB_PASSWORD_TEST }}"
          elif [ "$ENVIRONMENT" == "prod" ]; then
            echo ::set-output name=db-host::"${{ secrets.DB_HOST_PROD }}"
            echo ::set-output name=db-name::"${{ secrets.DB_NAME_PROD }}"
            echo ::set-output name=db-user::"${{ secrets.DB_USER_PROD }}"
            echo ::set-output name=db-password::"${{ secrets.DB_PASSWORD_PROD }}"
          else
            printf '%s\n' "ENVIRONMENT is not in accepted range: test, prod." >&2
            exit 1
          fi

          echo ::set-output name=app::"${ORG}-${ENVIRONMENT}-${NAME}"
      - name: CI
        run: |
          npm ci --frozen-lockfile
          npm run prettier
          npm run test
      - name: Heroku Login
        run: |
          sed --in-place --expression \
            "s/{{HEROKU_AUTH_TOKEN}}/${HEROKU_AUTH_TOKEN}/g" \
            .github/workflows/.netrc
          mv .github/workflows/.netrc ~/
      - name: Prepare deployment
        run: |
          heroku apps:create --region eu ${{ steps.env.outputs.app }} || true
          heroku config:set --app=${{ steps.env.outputs.app }} \
            DB_HOST=${{ steps.env.outputs.db-host }} \
            DB_NAME=${{ steps.env.outputs.db-name }} \
            DB_PASSWORD=${{ steps.env.outputs.db-password }} \
            DB_USER=${{ steps.env.outputs.db-user }} \
            NPM_CONFIG_PRODUCTION=true \
            NODE_ENV=production
          heroku git:remote --app=${{ steps.env.outputs.app }}
      - name: Deploy
        run: |
          git push heroku ${{ github.ref }}:main --force
          heroku ps:scale web=1
      - name: Cleanup
        if: always()
        run: rm --force ~/.netrc
